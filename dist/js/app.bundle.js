var ViewModel=function(r){var e=this;e.searchText=ko.observable(""),e.markers=ko.observableArray(r),e.currentMarker=ko.observable(null),e.markersFiltered=ko.computed(function(){var r=this.searchText();return r?ko.utils.arrayFilter(this.markers(),function(e){var a=e.z.title,t=a.indexOf(r)>-1;return t?map.addOverlay(e):map.removeOverlay(e),t}):(e.currentMarker(null),zoomOut2InitStatus(),this.markers().forEach(function(r){map.addOverlay(r)}),this.markers())},e),e.dispose=function(){e.markersFiltered.dispose()},e.alertMarker=function(r){e.currentMarker(r),zoomIn2Marker(r)}};ko.applyBindings(new ViewModel(markers));
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyJWaWV3TW9kZWwiLCJtYXJrZXJzIiwic2VsZiIsInRoaXMiLCJzZWFyY2hUZXh0Iiwia28iLCJvYnNlcnZhYmxlIiwib2JzZXJ2YWJsZUFycmF5IiwiY3VycmVudE1hcmtlciIsIm1hcmtlcnNGaWx0ZXJlZCIsImNvbXB1dGVkIiwiZmlsdGVyIiwidXRpbHMiLCJhcnJheUZpbHRlciIsIm1hcmtlciIsInRpdGxlIiwieiIsImZsYWciLCJpbmRleE9mIiwibWFwIiwiYWRkT3ZlcmxheSIsInJlbW92ZU92ZXJsYXkiLCJ6b29tT3V0MkluaXRTdGF0dXMiLCJmb3JFYWNoIiwiZGlzcG9zZSIsImFsZXJ0TWFya2VyIiwiem9vbUluMk1hcmtlciIsImFwcGx5QmluZGluZ3MiXSwibWFwcGluZ3MiOiJBQUlBLEdBQUFBLFdBQUEsU0FBQUMsR0FJQSxHQUFBQyxHQUFBQyxJQUdBRCxHQUFBRSxXQUFBQyxHQUFBQyxXQUFBLElBR0FKLEVBQUFELFFBQUFJLEdBQUFFLGdCQUFBTixHQUdBQyxFQUFBTSxjQUFBSCxHQUFBQyxXQUFBLE1BSUFKLEVBQUFPLGdCQUFBSixHQUFBSyxTQUFBLFdBQ0EsR0FBQUMsR0FBQVIsS0FBQUMsWUFDQSxPQUFBTyxHQWFBTixHQUFBTyxNQUFBQyxZQUFBVixLQUFBRixVQUFBLFNBQUFhLEdBRUEsR0FBQUMsR0FBQUQsRUFBQUUsRUFBQUQsTUFFQUUsRUFBQUYsRUFBQUcsUUFBQVAsSUFBQSxDQU1BLE9BTEFNLEdBQ0FFLElBQUFDLFdBQUFOLEdBRUFLLElBQUFFLGNBQUFQLEdBRUFHLEtBckJBZixFQUFBTSxjQUFBLE1BRUFjLHFCQUdBbkIsS0FBQUYsVUFBQXNCLFFBQUEsU0FBQVQsR0FDQUssSUFBQUMsV0FBQU4sS0FHQVgsS0FBQUYsWUFlQUMsR0FFQUEsRUFBQXNCLFFBQUEsV0FDQXRCLEVBQUFPLGdCQUFBZSxXQUdBdEIsRUFBQXVCLFlBQUEsU0FBQVgsR0FFQVosRUFBQU0sY0FBQU0sR0FJQVksY0FBQVosSUFVQVQsSUFBQXNCLGNBQUEsR0FBQTNCLFdBQUFDIiwiZmlsZSI6ImFwcC5idW5kbGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogQ3JlYXRlZCBieSBzdW5yaXNlMjA3NSBvbiAyMDE3LzIvMjYuXHJcbiAqL1xyXG4vLyBIZXJlJ3MgbXkgZGF0YSBtb2RlbFxyXG52YXIgVmlld01vZGVsID0gZnVuY3Rpb24obWFya2Vycykge1xyXG5cclxuICAgIC8v5pqC5a2YVmlld01vZGVs5a+56LGhXHJcbiAgICAvL2NhY2hlIHRoZSBvYmplY3Qgb2YgVmlld01vZGVsXHJcbiAgICB2YXIgc2VsZiA9IHRoaXM7XHJcblxyXG4gICAgLy9iaW5kIHRoZSB0ZXh0IGlucHV0IGZpZWxkIG9uIGluZGV4Lmh0bWxcclxuICAgIHNlbGYuc2VhcmNoVGV4dCA9IGtvLm9ic2VydmFibGUoXCJcIik7XHJcblxyXG4gICAgLy9jb25zdHJ1Y3QgYSBrbm9ja291dCBvYnNlcnZhYmxlIGFycmF5IGZvciBmdWxsIG1hcmtlcnMgbGlzdFxyXG4gICAgc2VsZi5tYXJrZXJzICAgICA9ICBrby5vYnNlcnZhYmxlQXJyYXkobWFya2Vycyk7XHJcblxyXG4gICAgLy91c2VkIHRvIHJlY29yZCB0aGUgbGFzdGx5LWNsaWNrZWQgbGlzdCBpdGVtIG9mICBsZWZ0IHVub3JkZXJlZCBsaXN0XHJcbiAgICBzZWxmLmN1cnJlbnRNYXJrZXIgPSBrby5vYnNlcnZhYmxlKG51bGwpO1xyXG5cclxuICAgIC8vZmlsdGVyIHRoZSBpdGVtcyB3aXRoIHRoZSBzZWFyY2ggdGV4dFxyXG4gICAgLy9SZWbvvJpodHRwOi8vd3d3Lmtub2NrbWVvdXQubmV0LzIwMTEvMDQvdXRpbGl0eS1mdW5jdGlvbnMtaW4ta25vY2tvdXRqcy5odG1sXHJcbiAgICBzZWxmLm1hcmtlcnNGaWx0ZXJlZCA9IGtvLmNvbXB1dGVkKGZ1bmN0aW9uKCkge1xyXG4gICAgICAgIHZhciBmaWx0ZXIgPSB0aGlzLnNlYXJjaFRleHQoKTtcclxuICAgICAgICBpZiAoIWZpbHRlcikge1xyXG4gICAgICAgICAgICAvLyBubyBtYXJrZXIgaXMgc2VsZWN0ZWQgbm93XHJcbiAgICAgICAgICAgIHNlbGYuY3VycmVudE1hcmtlcihudWxsKTtcclxuICAgICAgICAgICAgLy8gem9vbSBvdXQgdG8gaW5pdGlhbCBzdGF0dXMgb24gdGhlIGdvb2dsZSBtYXBcclxuICAgICAgICAgICAgem9vbU91dDJJbml0U3RhdHVzKCk7XHJcblxyXG4gICAgICAgICAgICAvL3NldCBhbGwgdGhlIG1hcmtlcnMgdG8gYmUgdmlzaWJsZVxyXG4gICAgICAgICAgICB0aGlzLm1hcmtlcnMoKS5mb3JFYWNoKGZ1bmN0aW9uKG1hcmtlcil7XHJcbiAgICAgICAgICAgICAgICBtYXAuYWRkT3ZlcmxheShtYXJrZXIpO1xyXG4gICAgICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLm1hcmtlcnMoKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICByZXR1cm4ga28udXRpbHMuYXJyYXlGaWx0ZXIodGhpcy5tYXJrZXJzKCksIGZ1bmN0aW9uKG1hcmtlcikge1xyXG4gICAgICAgICAgICAgICAgLy9mZXRjaCB0aXRsZSBpbmZvIG9mIG1hcmtlclxyXG4gICAgICAgICAgICAgICAgdmFyIHRpdGxlID0gbWFya2VyLnoudGl0bGU7XHJcbiAgICAgICAgICAgICAgICAvL3NlZSB3aGV0aGVyIGN1cnJlbnQgbWFya2VyIHNob3VsZCBiZSByZXRhaW5lZCBvbiBtYXBcclxuICAgICAgICAgICAgICAgIHZhciBmbGFnID0gKHRpdGxlLmluZGV4T2YoZmlsdGVyKSA+IC0xKTtcclxuICAgICAgICAgICAgICAgIGlmKGZsYWcpe1xyXG4gICAgICAgICAgICAgICAgICAgIG1hcC5hZGRPdmVybGF5KG1hcmtlcik7XHJcbiAgICAgICAgICAgICAgICB9ZWxzZXtcclxuICAgICAgICAgICAgICAgICAgICBtYXAucmVtb3ZlT3ZlcmxheShtYXJrZXIpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgcmV0dXJuIGZsYWc7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuICAgIH0sIHNlbGYpO1xyXG5cclxuICAgIHNlbGYuZGlzcG9zZSA9IGZ1bmN0aW9uICgpe1xyXG4gICAgICAgIHNlbGYubWFya2Vyc0ZpbHRlcmVkLmRpc3Bvc2UoKTtcclxuICAgIH07XHJcblxyXG4gICAgc2VsZi5hbGVydE1hcmtlciA9IGZ1bmN0aW9uKG1hcmtlcil7XHJcbiAgICAgICAgLy8gc2V0IHZhbHVlIG9mIHRoZSBjdXJyZW50IG1hcCBtYXJrZXJcclxuICAgICAgICBzZWxmLmN1cnJlbnRNYXJrZXIobWFya2VyKTtcclxuICAgICAgICAvLyBsb2FkIGNvZmZlZSBiYXIgaW5mbyBmcm9tIGZvdXJzcXVhcmVcclxuICAgICAgICAvLyBsb2FkQ29mZmVlU2hvcEluZm8obWFya2VyKTtcclxuICAgICAgICAvLyB6b29tIGluIGFuZCBjaGFuZ2UgdGhlIGNlbnRlciBvZiBtYXBcclxuICAgICAgICB6b29tSW4yTWFya2VyKG1hcmtlcik7XHJcbiAgICB9O1xyXG5cclxufTtcclxuXHJcbi8qXHJcbiogSSBuZWVkIHRvIGluaXRpYWxpc2UgaW5kZXguaHRtbFxyXG4qIGFmdGVyIHRoZSBnb29nbGUgbWFwIGlzIGxvYWRlZO+8jFxyXG4qIFRoaXMgbWFrZXMgS25vY2tvdXQgZ2V0IHRvIHdvcmtcclxuKiAqL1xyXG5rby5hcHBseUJpbmRpbmdzKG5ldyBWaWV3TW9kZWwobWFya2VycykpO1xyXG4iXX0=
