var ViewModel=function(r){var e=this;e.searchText=ko.observable(""),e.markers=ko.observableArray(r),e.currentMarker=ko.observable(null),e.markersFiltered=ko.computed(function(){var r=this.searchText();return r?ko.utils.arrayFilter(this.markers(),function(e){var a=e.z.title,t=a.indexOf(r)>-1;return t?map.addOverlay(e):map.removeOverlay(e),t}):(e.currentMarker(null),zoomOut2InitStatus(),this.markers().forEach(function(r){map.addOverlay(r)}),this.markers())},e),e.dispose=function(){e.markersFiltered.dispose()},e.alertMarker=function(r){e.currentMarker(r),zoomIn2Marker(r),setTimeout(function(){r.setAnimation(BMAP_ANIMATION_DROP)},100),searchPlaces(r)}};ko.applyBindings(new ViewModel(markers));
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyJWaWV3TW9kZWwiLCJtYXJrZXJzIiwic2VsZiIsInRoaXMiLCJzZWFyY2hUZXh0Iiwia28iLCJvYnNlcnZhYmxlIiwib2JzZXJ2YWJsZUFycmF5IiwiY3VycmVudE1hcmtlciIsIm1hcmtlcnNGaWx0ZXJlZCIsImNvbXB1dGVkIiwiZmlsdGVyIiwidXRpbHMiLCJhcnJheUZpbHRlciIsIm1hcmtlciIsInRpdGxlIiwieiIsImZsYWciLCJpbmRleE9mIiwibWFwIiwiYWRkT3ZlcmxheSIsInJlbW92ZU92ZXJsYXkiLCJ6b29tT3V0MkluaXRTdGF0dXMiLCJmb3JFYWNoIiwiZGlzcG9zZSIsImFsZXJ0TWFya2VyIiwiem9vbUluMk1hcmtlciIsInNldFRpbWVvdXQiLCJzZXRBbmltYXRpb24iLCJCTUFQX0FOSU1BVElPTl9EUk9QIiwic2VhcmNoUGxhY2VzIiwiYXBwbHlCaW5kaW5ncyJdLCJtYXBwaW5ncyI6IkFBSUEsR0FBQUEsV0FBQSxTQUFBQyxHQUlBLEdBQUFDLEdBQUFDLElBR0FELEdBQUFFLFdBQUFDLEdBQUFDLFdBQUEsSUFHQUosRUFBQUQsUUFBQUksR0FBQUUsZ0JBQUFOLEdBR0FDLEVBQUFNLGNBQUFILEdBQUFDLFdBQUEsTUFJQUosRUFBQU8sZ0JBQUFKLEdBQUFLLFNBQUEsV0FDQSxHQUFBQyxHQUFBUixLQUFBQyxZQUNBLE9BQUFPLEdBYUFOLEdBQUFPLE1BQUFDLFlBQUFWLEtBQUFGLFVBQUEsU0FBQWEsR0FFQSxHQUFBQyxHQUFBRCxFQUFBRSxFQUFBRCxNQUVBRSxFQUFBRixFQUFBRyxRQUFBUCxJQUFBLENBTUEsT0FMQU0sR0FDQUUsSUFBQUMsV0FBQU4sR0FFQUssSUFBQUUsY0FBQVAsR0FFQUcsS0FyQkFmLEVBQUFNLGNBQUEsTUFFQWMscUJBR0FuQixLQUFBRixVQUFBc0IsUUFBQSxTQUFBVCxHQUNBSyxJQUFBQyxXQUFBTixLQUdBWCxLQUFBRixZQWVBQyxHQUVBQSxFQUFBc0IsUUFBQSxXQUNBdEIsRUFBQU8sZ0JBQUFlLFdBR0F0QixFQUFBdUIsWUFBQSxTQUFBWCxHQUVBWixFQUFBTSxjQUFBTSxHQUlBWSxjQUFBWixHQUVBYSxXQUFBLFdBRUFiLEVBQUFjLGFBQUFDLHNCQUNBLEtBRUFDLGFBQUFoQixJQVVBVCxJQUFBMEIsY0FBQSxHQUFBL0IsV0FBQUMiLCJmaWxlIjoiYXBwLmJ1bmRsZS5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBDcmVhdGVkIGJ5IHN1bnJpc2UyMDc1IG9uIDIwMTcvMi8yNi5cclxuICovXHJcbi8vIEhlcmUncyBteSBkYXRhIG1vZGVsXHJcbnZhciBWaWV3TW9kZWwgPSBmdW5jdGlvbihtYXJrZXJzKSB7XHJcblxyXG4gICAgLy/mmoLlrZhWaWV3TW9kZWzlr7nosaFcclxuICAgIC8vY2FjaGUgdGhlIG9iamVjdCBvZiBWaWV3TW9kZWxcclxuICAgIHZhciBzZWxmID0gdGhpcztcclxuXHJcbiAgICAvL2JpbmQgdGhlIHRleHQgaW5wdXQgZmllbGQgb24gaW5kZXguaHRtbFxyXG4gICAgc2VsZi5zZWFyY2hUZXh0ID0ga28ub2JzZXJ2YWJsZShcIlwiKTtcclxuXHJcbiAgICAvL2NvbnN0cnVjdCBhIGtub2Nrb3V0IG9ic2VydmFibGUgYXJyYXkgZm9yIGZ1bGwgbWFya2VycyBsaXN0XHJcbiAgICBzZWxmLm1hcmtlcnMgICAgID0gIGtvLm9ic2VydmFibGVBcnJheShtYXJrZXJzKTtcclxuXHJcbiAgICAvL3VzZWQgdG8gcmVjb3JkIHRoZSBsYXN0bHktY2xpY2tlZCBsaXN0IGl0ZW0gb2YgIGxlZnQgdW5vcmRlcmVkIGxpc3RcclxuICAgIHNlbGYuY3VycmVudE1hcmtlciA9IGtvLm9ic2VydmFibGUobnVsbCk7XHJcblxyXG4gICAgLy9maWx0ZXIgdGhlIGl0ZW1zIHdpdGggdGhlIHNlYXJjaCB0ZXh0XHJcbiAgICAvL1JlZu+8mmh0dHA6Ly93d3cua25vY2ttZW91dC5uZXQvMjAxMS8wNC91dGlsaXR5LWZ1bmN0aW9ucy1pbi1rbm9ja291dGpzLmh0bWxcclxuICAgIHNlbGYubWFya2Vyc0ZpbHRlcmVkID0ga28uY29tcHV0ZWQoZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgdmFyIGZpbHRlciA9IHRoaXMuc2VhcmNoVGV4dCgpO1xyXG4gICAgICAgIGlmICghZmlsdGVyKSB7XHJcbiAgICAgICAgICAgIC8vIG5vIG1hcmtlciBpcyBzZWxlY3RlZCBub3dcclxuICAgICAgICAgICAgc2VsZi5jdXJyZW50TWFya2VyKG51bGwpO1xyXG4gICAgICAgICAgICAvLyB6b29tIG91dCB0byBpbml0aWFsIHN0YXR1cyBvbiB0aGUgZ29vZ2xlIG1hcFxyXG4gICAgICAgICAgICB6b29tT3V0MkluaXRTdGF0dXMoKTtcclxuXHJcbiAgICAgICAgICAgIC8vc2V0IGFsbCB0aGUgbWFya2VycyB0byBiZSB2aXNpYmxlXHJcbiAgICAgICAgICAgIHRoaXMubWFya2VycygpLmZvckVhY2goZnVuY3Rpb24obWFya2VyKXtcclxuICAgICAgICAgICAgICAgIG1hcC5hZGRPdmVybGF5KG1hcmtlcik7XHJcbiAgICAgICAgICAgIH0pO1xyXG5cclxuICAgICAgICAgICAgcmV0dXJuIHRoaXMubWFya2VycygpO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHJldHVybiBrby51dGlscy5hcnJheUZpbHRlcih0aGlzLm1hcmtlcnMoKSwgZnVuY3Rpb24obWFya2VyKSB7XHJcbiAgICAgICAgICAgICAgICAvL2ZldGNoIHRpdGxlIGluZm8gb2YgbWFya2VyXHJcbiAgICAgICAgICAgICAgICB2YXIgdGl0bGUgPSBtYXJrZXIuei50aXRsZTtcclxuICAgICAgICAgICAgICAgIC8vc2VlIHdoZXRoZXIgY3VycmVudCBtYXJrZXIgc2hvdWxkIGJlIHJldGFpbmVkIG9uIG1hcFxyXG4gICAgICAgICAgICAgICAgdmFyIGZsYWcgPSAodGl0bGUuaW5kZXhPZihmaWx0ZXIpID4gLTEpO1xyXG4gICAgICAgICAgICAgICAgaWYoZmxhZyl7XHJcbiAgICAgICAgICAgICAgICAgICAgbWFwLmFkZE92ZXJsYXkobWFya2VyKTtcclxuICAgICAgICAgICAgICAgIH1lbHNle1xyXG4gICAgICAgICAgICAgICAgICAgIG1hcC5yZW1vdmVPdmVybGF5KG1hcmtlcik7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gZmxhZztcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfVxyXG4gICAgfSwgc2VsZik7XHJcblxyXG4gICAgc2VsZi5kaXNwb3NlID0gZnVuY3Rpb24gKCl7XHJcbiAgICAgICAgc2VsZi5tYXJrZXJzRmlsdGVyZWQuZGlzcG9zZSgpO1xyXG4gICAgfTtcclxuXHJcbiAgICBzZWxmLmFsZXJ0TWFya2VyID0gZnVuY3Rpb24obWFya2VyKXtcclxuICAgICAgICAvLyBzZXQgdmFsdWUgb2YgdGhlIGN1cnJlbnQgbWFwIG1hcmtlclxyXG4gICAgICAgIHNlbGYuY3VycmVudE1hcmtlcihtYXJrZXIpO1xyXG4gICAgICAgIC8vIGxvYWQgY29mZmVlIGJhciBpbmZvIGZyb20gZm91cnNxdWFyZVxyXG4gICAgICAgIC8vIGxvYWRDb2ZmZWVTaG9wSW5mbyhtYXJrZXIpO1xyXG4gICAgICAgIC8vIHpvb20gaW4gYW5kIGNoYW5nZSB0aGUgY2VudGVyIG9mIG1hcFxyXG4gICAgICAgIHpvb21JbjJNYXJrZXIobWFya2VyKTtcclxuICAgICAgICAvL2V4ZWN1dGUgYW5pbWF0aW9uIGluIDAuMiBzZWNzXHJcbiAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbigpe1xyXG4gICAgICAgICAgICAvLyB0aGUgb3RoZXIgb3B0aW9uIGZvciBhbmltYXRpb246IEJNQVBfQU5JTUFUSU9OX0JPVU5DRVxyXG4gICAgICAgICAgICBtYXJrZXIuc2V0QW5pbWF0aW9uKEJNQVBfQU5JTUFUSU9OX0RST1ApO1xyXG4gICAgICAgIH0sMTAwKTtcclxuXHJcbiAgICAgICAgc2VhcmNoUGxhY2VzKG1hcmtlcik7XHJcbiAgICB9O1xyXG5cclxufTtcclxuXHJcbi8qXHJcbiogSSBuZWVkIHRvIGluaXRpYWxpc2UgaW5kZXguaHRtbFxyXG4qIGFmdGVyIHRoZSBnb29nbGUgbWFwIGlzIGxvYWRlZO+8jFxyXG4qIFRoaXMgbWFrZXMgS25vY2tvdXQgZ2V0IHRvIHdvcmtcclxuKiAqL1xyXG5rby5hcHBseUJpbmRpbmdzKG5ldyBWaWV3TW9kZWwobWFya2VycykpO1xyXG4iXX0=
