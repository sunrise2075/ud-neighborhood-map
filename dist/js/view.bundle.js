function initMap(){map=new BMap.Map("map-canvas");var e=new BMap.Point(center.location.lng,center.location.lat);map.centerAndZoom(e,INIT_ZOOM_NUM),map.addControl(new BMap.NavigationControl),map.addControl(new BMap.NavigationControl),map.addControl(new BMap.ScaleControl),map.addControl(new BMap.OverviewMapControl),map.addControl(new BMap.MapTypeControl),map.setCurrentCity("深圳");var o=new BMap.LocalSearch(map,{renderOptions:{map:map}});o.search("罗湖火车站")}function openInfoWindow(e){infoWindow?infoWindow.marker=e:(infoWindow=new google.maps.InfoWindow({position:e.getPosition(),maxWidth:350}),infoWindow.addListener("closeclick",function(){infoWindow.marker=null})),infoWindow.setContent(""),infoWindow.marker=e,showLocationDetail(e),infoWindow.open(map,e)}function showLocationDetail(e){var o="https://maps.googleapis.com/maps/api/geocode/json?latlng="+e.position.lat()+","+e.position.lng()+"&key="+MY_API_KEY;$.ajax({url:o}).done(function(e,o,t){console.log(e);var n="";if("OK"===e.status){var a=e.results[0].place_id;n+="<div>地址ID:"+a+"</div>";var i=e.results[0].formatted_address;n+="<div>详情:"+i+"</div>";var l=e.results[0].geometry;n+="<div>类型:"+l.location_type+"</div>",n+="<div>纬度:"+l.location.lat+"</div>",n+="<div>经度:"+l.location.lng+"</div>",infoWindow.setContent(n)}}).fail(function(e,o,t){console.log("textStatus:"+o+", errorThrown:"+t)}).always(function(e,o,t){console.log("ajax request to foursquare is completed, textStatus:"+o)})}function loadCoffeeShopInfo(e){coffeeShopMarkers.forEach(function(e){e.setMap(null)}),coffeeShopMarkers.length=0;var o="XBEVRWM1JGYOB2WS5LMPM35BJZFAANOTAPEEGNNHQ52BDOXV",t="P1XBXTSAGOKAWMGYIMHOALG1NSBPOJYVZLUAD5RSQEGJ3MN5",n="https://api.foursquare.com/v2/venues/explore?",a="ll="+e.position.lat()+"%2C"+e.position.lng()+"&section=coffee&limit=10&novelty=new",i="&client_id="+o+"&client_secret="+t+"&v=20170308",l=n+a+i;$.ajax({url:l}).done(function(e,o,t){var n=e.response.groups[0].items;n.forEach(function(e){var o=e.venue,t=new google.maps.Marker({position:new google.maps.LatLng(o.location.lat,o.location.lng),map:map,title:o.name,icon:{url:"./dist/images/coffee-n-tea.png"}});t.addListener("click",function(){t.setAnimation(4),openInfoWindow(t)}),coffeeShopMarkers.push(t)})}).fail(function(e,o,t){console.log("textStatus:"+o+", errorThrown:"+t)}).always(function(e,o,t){console.log("ajax request to foursquare is completed, textStatus:"+o)})}function zoomIn2Marker(e){map.setCenter(e.getPosition()),map.setZoom(DETAIL_ZOOM_NUM)}function zoomOut2InitStatus(){map.setCenter(center.location),map.setZoom(INIT_ZOOM_NUM)}var styles=[{featureType:"water",stylers:[{color:"#19a0d8"}]},{featureType:"administrative",elementType:"labels.text.stroke",stylers:[{color:"#ffffff"},{weight:6}]},{featureType:"administrative",elementType:"labels.text.fill",stylers:[{color:"#e85113"}]},{featureType:"road.highway",elementType:"geometry.stroke",stylers:[{color:"#efe9e4"},{lightness:-40}]},{featureType:"transit.station",stylers:[{weight:9},{hue:"#e85113"}]},{featureType:"road.highway",elementType:"labels.icon",stylers:[{visibility:"off"}]},{featureType:"water",elementType:"labels.text.stroke",stylers:[{lightness:100}]},{featureType:"water",elementType:"labels.text.fill",stylers:[{lightness:-100}]},{featureType:"poi",elementType:"geometry",stylers:[{visibility:"on"},{color:"#f0e4d3"}]},{featureType:"road.highway",elementType:"geometry.fill",stylers:[{color:"#efe9e4"},{lightness:-25}]}],map=null,MY_API_KEY="HW1hgQNz18TYRRn7BjN6BOMALz6h5G1C",infoWindow=null,INIT_ZOOM_NUM=11,DETAIL_ZOOM_NUM=14;initMap();var coffeeShopMarkers=[];
//# sourceMappingURL=data:application/json;charset=utf8;base64,
