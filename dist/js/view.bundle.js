function initMap(){map=new google.maps.Map(document.getElementById("map-canvas"),{zoom:INIT_ZOOM_NUM,center:center.location}),map.setOptions({styles:styles});var e=[];geoLocations.forEach(function(o){var t=new google.maps.Marker({position:o.location,map:map,title:o.title,icon:{url:o.icon}});t.addListener("click",function(){t.setAnimation(4),openInfoWindow(t)}),e.push(t)}),initKoViewModel4App(e)}function openInfoWindow(e){function o(o,t){if(t==google.maps.StreetViewStatus.OK){var n=o.location.latLng,i=google.maps.geometry.spherical.computeHeading(n,e.position);infowindow.setContent("<div>"+e.title+'</div><div id="pano"></div>');var a={position:n,pov:{heading:i,pitch:30}};new google.maps.StreetViewPanorama(document.getElementById("pano"),a)}else infoWindow.setContent("<div>"+e.title+"</div><div>No Street View Found</div>")}infoWindow?infoWindow.marker=e:(infoWindow=new google.maps.InfoWindow({position:e.getPosition(),maxWidth:350}),infoWindow.addListener("closeclick",function(){infoWindow.marker=null})),infoWindow.setContent(""),infoWindow.marker=e;var t=new google.maps.StreetViewService,n=50;t.getPanoramaByLocation(e.position,n,o),infoWindow.open(map,e)}function loadCoffeeShopInfo(e){coffeeShopMarkers.forEach(function(e){e.setMap(null)}),coffeeShopMarkers.length=0;var o="XBEVRWM1JGYOB2WS5LMPM35BJZFAANOTAPEEGNNHQ52BDOXV",t="P1XBXTSAGOKAWMGYIMHOALG1NSBPOJYVZLUAD5RSQEGJ3MN5",n="https://api.foursquare.com/v2/venues/explore?",i="ll="+e.position.lat()+"%2C"+e.position.lng()+"&section=coffee&limit=10&novelty=new",a="&client_id="+o+"&client_secret="+t+"&v=20170308",s=n+i+a;$.ajax({url:s}).done(function(e,o,t){var n=e.response.groups[0].items;console.log(n);for(var i in n){var a=n[i].venue,s=new google.maps.Marker({position:new google.maps.LatLng(a.location.lat,a.location.lng),map:map,title:a.name,icon:{url:"./dist/images/coffee-n-tea.png"}});coffeeShopMarkers.push(s)}}).fail(function(e,o,t){console.log("textStatus:"+o+", errorThrown:"+t)}).always(function(e,o,t){console.log("ajax request to foursquare is completed, textStatus:"+o)})}function zoomIn2Marker(e){map.setCenter(e.getPosition()),map.setZoom(DETAIL_ZOOM_NUM)}function zoomOut2InitStatus(){map.setCenter(center.location),map.setZoom(INIT_ZOOM_NUM)}var styles=[{featureType:"water",stylers:[{color:"#19a0d8"}]},{featureType:"administrative",elementType:"labels.text.stroke",stylers:[{color:"#ffffff"},{weight:6}]},{featureType:"administrative",elementType:"labels.text.fill",stylers:[{color:"#e85113"}]},{featureType:"road.highway",elementType:"geometry.stroke",stylers:[{color:"#efe9e4"},{lightness:-40}]},{featureType:"transit.station",stylers:[{weight:9},{hue:"#e85113"}]},{featureType:"road.highway",elementType:"labels.icon",stylers:[{visibility:"off"}]},{featureType:"water",elementType:"labels.text.stroke",stylers:[{lightness:100}]},{featureType:"water",elementType:"labels.text.fill",stylers:[{lightness:-100}]},{featureType:"poi",elementType:"geometry",stylers:[{visibility:"on"},{color:"#f0e4d3"}]},{featureType:"road.highway",elementType:"geometry.fill",stylers:[{color:"#efe9e4"},{lightness:-25}]}],map=null,MY_API_KEY="AIzaSyAyWxuLDi5aIxMGqATA74uLx4huY1uF4hg",infoWindow=null,INIT_ZOOM_NUM=11,DETAIL_ZOOM_NUM=14,coffeeShopMarkers=[];
//# sourceMappingURL=data:application/json;charset=utf8;base64,
